generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id             String         @id @default(uuid())
  name           String
  slug           String
  description    String
  avatarImageUrl String
  coverImageUrl  String
  menuCategories MenuCategory[]
  products       Product[]
  orders         Order[]
  createAt       DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model MenuCategory {
  id           String     @id @default(uuid())
  name         String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  products     Product[]
  createAt     DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Product {
  id             String         @id @default(uuid())
  name           String
  description    String
  price          Float
  imageUrl       String
  igredients     String
  orderProducts  OrderProduct[]
  restaurant     Restaurant     @relation(fields: [restaurantId], references: [id])
  restaurantId   String
  menuCategory   MenuCategory   @relation(fields: [menuCategoryId], references: [id])
  menuCategoryId String
  createAt       DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Order {
  id                 Int                @id @default(autoincrement())
  //problems for id
  total              Float
  status             OrderStatus
  consumptionsMethod consumptionsMethod
  restaurantId       String
  restaurant         Restaurant         @relation(fields: [restaurantId], references: [id])
  orderProducts      OrderProduct[]
  createAt           DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

model OrderProduct {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  quantity  Int
  price     Float
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  IN_PROGRESS
  DELIVERED
  CANCELED
}

enum consumptionsMethod {
  TAKEAWAY
  DINE_IN
}
